
#  █▀▄▀█ █▀█ █▄░█ █ ▀█▀ █▀█ █▀█
#  █░▀░█ █▄█ █░▀█ █ ░█░ █▄█ █▀▄ 
                                  
monitor = HDMI-A-1, 1920x1080@75, 0x0, 1




#  █▀▀ ▀▄▀ █▀▀ █▀▀
#  ██▄ █░█ ██▄ █▄▄

$scrPath = ~/.config/hypr/scripts
exec-once = $scrPath/resetxdgportal.sh # reset XDPH for screenshare
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP # for XDPH
exec-once = dbus-update-activation-environment --systemd --all # for XDPH
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP # for XDPH
exec-once = waybar # launch status bar
exec-once = nm-applet --indicator # systray app for Network/Wifi
#exec-once = blueman-applet  # systray app for Bluetooth, [blueman-applet should be installed]
exec-once = dunst # start notification daemon
exec-once = wl-paste --type text --watch cliphist store # clipboard store text data
exec-once = wl-paste --type image --watch cliphist store # clipboard store image data
exec-once = $scrPath/swwwallpaper.sh # start wallpaper daemon & set wallpaper
exec-once = /usr/bin/lxqt-policykit-agent   # Authentication agent for lxqt(used for pcmanfm-qt)
exec-once = hypridle & # start hypridle service




#  █▀▀ █▄░█ █░█
#  ██▄ █░▀█ ▀▄▀

env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland
env = QT_QPA_PLATFORM,wayland
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = QT_QPA_PLATFORMTHEME,qt6ct
env = MOZ_ENABLE_WAYLAND,1




#  █ █▄░█ █▀█ █░█ ▀█▀
#  █ █░▀█ █▀▀ █▄█ ░█░

input {
    kb_layout = us
    follow_mouse = 1 # Cursor movement will always change focus to the window under the cursor.

    touchpad {
        natural_scroll = false
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
    force_no_accel = -1
}




#  █░░ ▄▀█ █▄█ █▀█ █░█ ▀█▀ █▀
#  █▄▄ █▀█ ░█░ █▄█ █▄█ ░█░ ▄█

dwindle {
    pseudotile = true # Pseudotiled windows retain their floating size when tiled.
    preserve_split = true # if enabled, the split (side/top) will not change regardless of what happens to the container.
}

master {
    new_status = master
}




#  █▀▄▀█ █ █▀ █▀▀
#  █░▀░█ █ ▄█ █▄▄

misc {
    vrr = 0
    disable_hyprland_logo = true
    disable_splash_rendering = true
    force_default_wallpaper = 0
}




#  █▀▀ █▀▀ █▀█ █▀ █▄█ █▀ ▀█▀ █▀▀ █▀▄▀█
#  ██▄ █▄▄ █▄█ ▄█ ░█░ ▄█ ░█░ ██▄ █░▀░█

ecosystem {
    no_update_news = true
    no_donation_nag = true
}




# ▄▀█ █▄░█ █ █▀▄▀█ ▄▀█ ▀█▀ █ █▀█ █▄░█
# █▀█ █░▀█ █ █░▀░█ █▀█ ░█░ █ █▄█ █░▀█

animations {
    enabled = yes
    bezier = wind, 0.05, 0.9, 0.1, 1.05
    bezier = winIn, 0.1, 1.1, 0.1, 1.1
    bezier = winOut, 0.3, -0.3, 0, 1
    bezier = liner, 1, 1, 1, 1
    animation = windows, 1, 6, wind, slide
    animation = windowsIn, 1, 6, winIn, slide
    animation = windowsOut, 1, 5, winOut, slide
    animation = windowsMove, 1, 5, wind, slide
    animation = border, 1, 1, liner
    animation = borderangle, 1, 30, liner, loop
    animation = fade, 1, 10, default
    animation = workspaces, 1, 5, wind
}




#  ▀█▀ █░█ █▀▀ █▀▄▀█ █▀▀ █▀
#  ░█░ █▀█ ██▄ █░▀░█ ██▄ ▄█
                                      
source = ~/.config/hypr/themes/common.conf # shared theme settings
source = ~/.config/hypr/themes/theme.conf # theme specific settings





#--------------------------------------------------------------------------------------------------#

#  █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
#  █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# Main modifier
$mainMod = ALT # ALT key

# assign apps
$term = kitty
$fileManager = pcmanfm-qt


# Window/Session actions
bind = $mainMod, Q, exec, hyprctl dispatch killactive # killactive, kill the window on focus
bind = ALT, F4, exec, hyprctl dispatch killactive # killactive, kill the window on focus

bind = $mainMod, W, togglefloating, # toggle the window on focus to float
bind = ALT, F, fullscreen, # toggle the window on focus to fullscreen

bind = $mainMod, L, exec, hyprlock # lock screen using hyprlock
bind = $mainMod, backspace, exec, $scrPath/logoutlaunch.sh # logout menu
bind = $CONTROL, ESCAPE, exec, killall waybar || waybar # toggle waybar


# Application shortcuts
bind = $mainMod, E, exec, kitty --class yazi -e yazi # Terminal based file manager
bind = $mainMod, return, exec, $term # open terminal
bind = $mainMod, X, exec, $fileManager # open File-Manager
bind = $CONTROL SHIFT, ESCAPE, exec, kitty btop # open btop(system-monitor) 


# Rofi is toggled 'on/off' if you repeat the key presses
bind = $mainMod, A, exec, pkill -x rofi || $scrPath/rofilaunch.sh d # launch desktop applications


# Audio control
bind = ,XF86AudioRaiseVolume, exec, $scrPath/volumectl.sh up
bind = ,XF86AudioLowerVolume, exec, $scrPath/volumectl.sh down
bind = ,XF86AudioMute, exec, $scrPath/volumectl.sh mute
bind = ,F10, exec, $scrPath/volumectl.sh micmute


# Exec custom scripts
bind = $mainMod ALT, right, exec, $scrPath/swwwallpaper.sh -n # next wallpaper
bind = $mainMod ALT, left, exec, $scrPath/swwwallpaper.sh -p # previous wallpaper
bind = $mainMod, V, exec, pkill -x rofi || $scrPath/cliphist.sh c # open clipboard
bind = $mainMod ALT, up, exec, $scrPath/switchwaybar.sh -h # horizontal layout waybar
bind = $mainMod ALT, down, exec, $scrPath/switchwaybar.sh -v # vertical layout waybar


# Switch themes
bind = $mainMod SHIFT, B, exec, $scrPath/switchmaster.sh -b # Everblush
bind = $mainMod SHIFT, E, exec, $scrPath/switchmaster.sh -e # Everforest
bind = $mainMod SHIFT, D, exec, $scrPath/switchmaster.sh -d # Dracula
bind = $mainMod SHIFT, G, exec, $scrPath/switchmaster.sh -g # Gruvbox
bind = $mainMod SHIFT, N, exec, $scrPath/switchmaster.sh -n # Nord


# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = ALT, Tab, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Switch workspaces relative to the active workspace
bind = CTRL SHIFT, right, workspace, r+1 
bind = CTRL SHIFT, left, workspace, r-1

# move to the first empty workspace instantly 
bind = CTRL SHIFT, down, workspace, empty 

# Resize windows
binde = $mainMod SHIFT, right, resizeactive, 30 0
binde = $mainMod SHIFT, left, resizeactive, -30 0
binde = $mainMod SHIFT, up, resizeactive, 0 -30
binde = $mainMod SHIFT, down, resizeactive, 0 30

# Move active window to a workspace 
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bindm = $mainMod, mouse:272, movewindow


# Take Screenshot
bindl = $mainMod, PRINT, exec, hyprshot -m region -o ~/Pictures/Screenshots # Screenshot selected region
bindl = $shiftMod, PRINT, exec, hyprshot -m output -o ~/Pictures # Screenshot entire monitor 
bind = , PRINT, exec, hyprshot -m window -o ~/Pictures # Screenshot active window



#--------------------------------------------------------------------------------------------------#

#  █░█░█ █ █▄░█ █▀▄ █▀█ █░█░█ █▀█ █░█ █░░ █▀▀ █▀
#  ▀▄▀▄▀ █ █░▀█ █▄▀ █▄█ ▀▄▀▄▀ █▀▄ █▄█ █▄▄ ██▄ ▄█

# Run 'hyprctl clients | grep -A 10 app-name' to get app title 


# Opacity
windowrulev2 = opacity 0.95 0.95,class:^(nwg-look)$
windowrulev2 = opacity 0.95 0.95,class:^(qt5ct)$
windowrulev2 = opacity 0.95 0.95,class:^(qt6ct)$
windowrulev2 = opacity 0.95 0.95,class:^(kvantummanager)$
windowrulev2 = opacity 0.80 0.75,class:^(pavucontrol)$
windowrulev2 = opacity 0.80 0.75,class:^(blueman-manager)$
windowrulev2 = opacity 0.80 0.75,class:^(nm-applet)$
windowrulev2 = opacity 0.80 0.75,class:^(nm-connection-editor)$
windowrulev2 = opacity 0.90 0.80,class:^(code-url-handler)$
#windowrulev2 = opacity 0.80 0.80,class:^(jetbrains-pycharm-ce)$
#windowrulev2 = opacity 0.95 0.95,class:^(com.obsproject.Studio)$ 


# Float rules
windowrulev2 = float,title:^(Picture-in-Picture)$
windowrulev2 = float,class:^(kvantummanager)$
windowrulev2 = float,class:^(qt5ct)$
windowrulev2 = float,class:^(qt6ct)$
windowrulev2 = float,class:^(nwg-look)$
windowrulev2 = float,class:^(org.kde.ark)$
windowrulev2 = float,class:^(pavucontrol)$
windowrulev2 = float,class:^(blueman-manager)$
windowrulev2 = float,class:^(nm-applet)$
windowrulev2 = float,class:^(nm-connection-editor)$
windowrulev2 = float,class:^(lxqt-policykit-agent)$
windowrulev2 = float,class:^(yazi)$ 
windowrulev2 = float,class:^(io.bassi.Amberol)$


# Specific Size for applications
windowrulev2 = size 1400 800,class:^(yazi)$
windowrulev2 = size 300 200,class:(io.bassi.Amberol)$


# Specific Animation style for apps
windowrulev2 = animation slide,(class:kitty)$
windowrulev2 = animation gnomed,class:^(pcmanfm-qt|code)$





